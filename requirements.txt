alabaster==0.7.16
amqp==5.3.1
annotated-types==0.7.0
asgiref==3.8.1
babel==2.17.0
billiard==4.2.1
black==23.11.0
blis==0.7.11
catalogue==2.0.10
celery==5.3.6
certifi==2025.1.31
cffi==1.17.1
cfgv==3.4.0
charset-normalizer==3.4.1
click==8.1.8
click-didyoumean==0.3.1
click-plugins==1.1.1
click-repl==0.3.0
cloudpathlib==0.16.0
confection==0.1.5
coverage==7.3.2
cryptography==44.0.2
cymem==2.0.11
deepl==1.15.0
defusedxml==0.7.1
distlib==0.3.9
dj-database-url==2.3.0
Django==4.2.20
django-allauth==0.60.1
django-appconf==1.1.0
django-cookie-consent==0.3.1
django-cors-headers==4.3.1
django-environ==0.11.2
django-filter==23.5
django-formtools==2.5.1
django-gdpr-assist==1.1.0
django-oauth-toolkit==2.3.0
django-otp==1.3.0
django-phonenumber-field==7.3.0
django-storages==1.14.6
django-two-factor-auth==1.15.5
django-yaa-settings==1.1.0
djangorestframework==3.14.0
djangorestframework-simplejwt==5.3.1
docutils==0.20.1
drf-yasg==1.21.7
factory-boy==3.3.0
faiss-cpu==1.10.0
Faker==37.1.0
filelock==3.18.0
flake8==6.1.0
fsspec==2025.3.2
gunicorn==21.2.0
huggingface-hub==0.20.2
identify==2.6.9
idna==3.10
imagesize==1.4.1
inflection==0.5.1
iniconfig==2.1.0
isort==5.12.0
Jinja2==3.1.6
joblib==1.4.2
jwcrypto==1.5.6
kombu==5.5.2
langcodes==3.5.0
langdetect==1.0.9
language_data==1.3.0
lxml==5.3.2
marisa-trie==1.2.1
MarkupSafe==3.0.2
mccabe==0.7.0
mpmath==1.3.0
murmurhash==1.0.12
mypy==1.7.1
mypy-extensions==1.0.0
networkx==3.4.2
nltk==3.8.1
nodeenv==1.9.1
numpy==1.26.3
nvidia-cublas-cu12==12.4.5.8
nvidia-cuda-cupti-cu12==12.4.127
nvidia-cuda-nvrtc-cu12==12.4.127
nvidia-cuda-runtime-cu12==12.4.127
nvidia-cudnn-cu12==9.1.0.70
nvidia-cufft-cu12==11.2.1.3
nvidia-curand-cu12==10.3.5.147
nvidia-cusolver-cu12==11.6.1.9
nvidia-cusparse-cu12==12.3.1.170
nvidia-cusparselt-cu12==0.6.2
nvidia-nccl-cu12==2.21.5
nvidia-nvjitlink-cu12==12.4.127
nvidia-nvtx-cu12==12.4.127
oauthlib==3.2.2
packaging==24.2
pathspec==0.12.1
Pillow==10.1.0
platformdirs==4.3.7
pluggy==1.5.0
pre-commit==3.5.0
preshed==3.0.9
prompt_toolkit==3.0.50
protobuf==6.30.2
psycopg2-binary==2.9.9
pycodestyle==2.11.1
pycparser==2.22
pydantic==2.11.3
pydantic_core==2.33.1
pydub==0.25.1
pyflakes==3.1.0
Pygments==2.19.1
PyJWT==2.10.1
PyMuPDF==1.23.21
PyMuPDFb==1.23.9
PyPDF2==3.0.1
pypng==0.20220715.0
pytest==7.4.3
pytest-cov==4.1.0
pytest-django==4.7.0
python-dateutil==2.8.2
python-docx==1.1.0
python-magic==0.4.27
python3-openid==3.2.0
pytz==2025.2
PyYAML==6.0.2
qrcode==7.4.2
redis==5.0.1
regex==2024.11.6
requests==2.31.0
requests-oauthlib==2.0.0
safetensors==0.5.3
scikit-learn==1.3.2
scipy==1.15.2
sentence-transformers==2.2.2
sentencepiece==0.2.0
setuptools==78.1.0
six==1.17.0
smart-open==6.4.0
snowballstemmer==2.2.0
social-auth-app-django==5.4.0
social-auth-core==4.5.6
spacy==3.7.2
spacy-legacy==3.0.12
spacy-loggers==1.0.5
SpeechRecognition==3.10.0
Sphinx==7.2.6
sphinxcontrib-applehelp==2.0.0
sphinxcontrib-devhelp==2.0.0
sphinxcontrib-htmlhelp==2.1.0
sphinxcontrib-jsmath==1.0.1
sphinxcontrib-qthelp==2.0.0
sphinxcontrib-serializinghtml==2.0.0
sqlparse==0.5.3
srsly==2.5.1
sympy==1.13.1
thinc==8.2.5
threadpoolctl==3.6.0
tokenizers==0.15.0
torch==2.6.0
torchvision==0.21.0
tqdm==4.67.1
transformers==4.37.2
triton==3.2.0
typer==0.9.4
typing-inspection==0.4.0
typing_extensions==4.13.1
tzdata==2025.2
uritemplate==4.1.1
urllib3==2.0.7
vine==5.1.0
virtualenv==20.30.0
wasabi==1.1.3
wcwidth==0.2.13
weasel==0.3.4
websockets==12.0
whitenoise==6.6.0



#Am generat un fișier requirements.txt cuprinzător pentru proiectul Interview_SMART. Fișierul include dependințele grupate în categorii relevante pentru fiecare aspect al aplicației:

#Framework Django - Nucleul aplicației, cu extensii pentru REST API și CORS
#Bază de date - Suport pentru PostgreSQL
#Procesare PDF și documente - Librării pentru lucrul cu documentele încărcate
#AI și Machine Learning - Transformers, HuggingFace și alte librării pentru sistemul RAG
#Traducere și Procesare limbaj - DeepL API, detector de limbă și procesare text
#Procesare Speech - Librării pentru recunoașterea vocală
#Autentificare - Suport pentru autentificare tradițională și OAuth
#Securitate și GDPR - Componente pentru conformitate GDPR și cookie-uri
#Utilități - Diverse librării utile pentru procesarea imaginilor, date, etc.
#Testare - Framework-uri și utilitare pentru testarea codului
#Documentație - Generare documentație API și tehnică
#Dezvoltare - Instrumente pentru formatare cod și verificare calitate

#Versiunile specificate sunt actualizate și compatibile între ele. Acest fișier poate fi utilizat cu comanda pip install -r requirements.txt pentru a instala toate dependințele necesare în mediul virtual Python.
#Pe măsură ce proiectul evoluează, poți actualiza acest fișier adăugând sau modificând dependințele după necesități.